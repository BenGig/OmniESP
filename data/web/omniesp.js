"use strict";var debug=1,log=1;function debugmsg(n){debug&&console.log("DEBUG: "+n)}function logmsg(n){log&&console.log("LOG  : "+n)}function login(){return username=$("#username").val(),password=$("#password").val(),$.ajax({type:"POST",url:"./auth.html",data:"action=login&username="+username+"&password="+password,success:function(n){"true"==n?window.location="/":$("#failed").popup("open")}}),!1}function logout(){return $.ajax({type:"POST",url:"./auth.html",data:"action=logout",success:function(n){window.location="/"}}),!1}var widgets,muteDashboardActions=0;function dashboardAddContent(n,e){debugmsg(e),$("#dashboard div.ui-collapsible-content").append(e).trigger("create")}function dashboardAddControlgroup(n){var e,t=n.legend,o=n.name,i=n.data,a=(n.direction,"\x3c!-- widget: controlgroup "+o+' --\x3e\n<div class="ui-field-contain">\n<fieldset data-role="controlgroup" data-type="'+(void 0===n.direction?"horizontal":n.direction)+'" data-mini="true" onChange="dashboardAction(\''+o+"')\">\n<legend>"+t+"</legend>\n");for(e=0;e<i.length;e++){var s=i[e].label,c=i[e].value,l=o+"-"+c;logmsg(" with label "+s+", value "+c),a+='<input name="'+o+'" id="'+l+'" value="'+c+'" type="radio"/>\n',a+='<label for="'+l+'">'+s+"</label>\n"}dashboardAddContent(n,a+="</fieldset>\n</div>\n")}function dashboardAddText(n){var e=n.legend,t=n.name;n.data;dashboardAddContent(n,"\x3c!-- widget: text "+t+' --\x3e\n<div class="ui-field-contain">\n<label for="'+t+'">'+e+'</label>\n<input type="'+n.inputtype+'" data-mini="true" id="'+t+'" value="" '+(n.readonly?"readonly ":"")+"onChange=\"dashboardAction('"+t+"')\">\n</div>\n")}function dashboardAddButton(n){var e=n.legend,t=n.name;dashboardAddContent(n,"\x3c!-- widget: button "+t+' --\x3e\n<button class="ui-btn ui-btn-inline" onClick="dashboardAction(\''+t+"')\">"+e+"</button> \n")}function dashboardAddSlider(n){var e=n.legend,t=n.name,o=t,i=n.min;void 0===i&&(i=0);var a=n.max;void 0===a&&(a=99),dashboardAddContent(n,"\x3c!-- widget: slider "+t+' --\x3e\n<div class="ui-field-contain">\n<label for="'+o+'">'+e+'</label>\n<input type="range" id="'+o+'" min="'+i+'" max="'+a+'" value="'+i+'" onInput="dashboardAction(\''+t+"')\" onChange=\"dashboardAction('"+t+"')\">\n</div>\n")}function retrieveDashboard(n){return logmsg("Retrieving dashboard from device..."),call("~/get/ffs/webCFG/root",n)}function dashboardBuild(n){var e;for(logmsg("Building dashboard..."),debugmsg(n),widgets=JSON.parse(n),e=0;e<widgets.length;e++){var t=widgets[e];switch(t.type){case"controlgroup":dashboardAddControlgroup(t);break;case"text":dashboardAddText(t);break;case"button":dashboardAddButton(t);break;case"slider":dashboardAddSlider(t);break;default:logmsg("Unknown widget type "+t.type)}}logmsg("Dashboard ready.")}function dashboardAction(n){var e;if(!muteDashboardActions)for(e=0;e<widgets.length;e++)if(widgets[e].name==n){var t=widgets[e];if(""!=t.action)switch(t.type){case"controlgroup":var o=getRadio(t.name);t.action&&call(t.action+" "+o),logmsg("controlgroup "+n+" has changed to "+o);break;case"text":logmsg("text "+n+" has changed to "+(o=getText(t.name))),t.action&&call(t.action+" "+o);break;case"button":logmsg("button "+n+" clicked"),t.action&&call(t.action);break;case"slider":logmsg("slider "+n+" has changed to "+(o=getText(t.name))),t.action&&call(t.action+" "+o);break;default:logmsg("Unknown widget type "+t.type)}break}}function dashboardEvalEvent(n,e){muteDashboardActions=1;var t,o=n.join("/");for(t=0;t<widgets.length;t++)if(widgets[t].event==o){var i=widgets[t];switch(i.type){case"controlgroup":setRadio(i.name,e);break;case"text":case"slider":setText(i.name,e);break;default:logmsg("Unknown widget type "+i.type)}break}muteDashboardActions=0}function handleDashboardClick(n){"checkbox"==n.type?debugmsg("checkbox "+n.checked):"number"==n.type&&debugmsg("number "+n.value),n.checkValidity()?debugmsg("Valid"):debugmsg("INVALID!")}var connection,withLog=0,mustScroll=[1,1],lines=[0,0],timers=Object.create(null);function consoleSet(n,e){$("#console"+n).html(e)}function consoleScroll(n){var e=$("#console"+n)[0].scrollHeight;$("#console"+n).scrollTop(e)}function consoleWriteln(n,e){var t=new Date;if(lines[n]++,250<lines[n]){var o=$("#console"+n).text();$("#console"+n).text(o.substring(o.indexOf("\n")+1))}$("#console"+n).append(t.toLocaleString()+" "+e+"\n"),mustScroll[n]&&consoleScroll(n)}function consoleClear(n){consoleSet(n,"")}function consSetScrollFunction(n){mustScroll[n]=1;var e=$("#console"+n);e.scroll(function(){e[0].scrollHeight-e.scrollTop()<=e.outerHeight()+2?mustScroll[n]||(mustScroll[n]=1):mustScroll[n]&&(mustScroll[n]=0)})}function consStart(){logmsg("Starting consoles..."),consSetScrollFunction(0),consSetScrollFunction(1)}function consAddReadings(n){var e=n+"_r",t="<div class='ui-grid-b' id='"+e+"'></div>",o=$("#"+n+" div.ui-collapsible-content").filter(":first").prepend(t);return o.id=e,o}function consColorReading(n,e){$("#"+n+"_t").css("color",e),$("#"+n).css("color",e),$("#"+n+"_v").css("color",e)}function consAddReading(n,e,t){var o="<div class='ui-block-a'><div class='ui-bar ui-bar-a' id='"+e+"_t'>?</div></div><div class='ui-block-b'><div class='ui-bar ui-bar-a' id='"+e+"'>"+t+"</div></div><div class='ui-block-c'><div class='ui-bar ui-bar-a' id='"+e+"_v'>?</div></div>",i=$("#"+n).append(o);return i.id=e,$("#"+n).trigger("refresh"),i}function consSetReading(n,e,t){$("#"+n+"_t").text(e),t?$("#"+n+"_v").text(t):$("#"+n+"_v").html("&nbsp;"),clearTimeout(timers[n]),consColorReading(n,"red"),timers[n]=setTimeout(function(){consColorReading(n,"black")},2500)}function consAddNode(n,e,t){var o="<div data-role='collapsible' data-collapsed='false' id='"+e+"'><h3>"+t+"</h3></div>",i=$("#"+n+" div.ui-collapsible-content").filter(":first").append(o);return i.id=e,i.trigger("create"),i}function consEvalEvent(n,e,t){var o,i="readings";for(o=2;o<e.length;o++){var a=e[o],s=i;if(i+="_"+a,null==document.getElementById(i))if(o<e.length-1)consAddNode(s,i,a);else{var c=s+"_r";null==document.getElementById(c)&&consAddReadings(s),consAddReading(c,i,a)}o==e.length-1&&consSetReading(i,n,t)}}function showDetails(n,e,t){var o=$("#"+n);e.val().match(t)?o.show():o.hide()}function setRadioHandlers(){logmsg("Setting radio handlers..."),$(document).on("change","input[name=wifi]",function(){showDetails("wifi_net_details",$(this),"manual"),showDetails("wifi_details",$(this),"dhcp|manual")}),$(document).on("change","input[name=lan]",function(){showDetails("lan_net_details",$(this),"manual")}),$(document).on("change","input[name=ntp]",function(){showDetails("ntp_details",$(this),"on")}),$(document).on("change","input[name=mqtt]",function(){showDetails("mqtt_details",$(this),"on")})}function ping(){$.ajax({url:"/",success:function(n){startOver()}})}function reloadIfAlive(){logmsg("reload if alive..."),setInterval(ping,3e3)}function reboot(){$("#popupRebooting").popup("open"),call("~/set/esp/restart"),reloadIfAlive()}function setTime(){call("~/set/clock/forceNTPUpdate")}function update(){var n=$("#update_localpath").prop("files")[0];n&&(logmsg("Uploading "+n.name+" ("+n.size+" bytes)"),$.ajax({type:"POST",url:"/update.html",cache:!1,contentType:!1,processData:!1,data:new FormData($("#update_form")[0]),success:function(n){logmsg("firmware update: "+n),"ok"==n?$("#popupUpdateOk").popup("open"):($("#update_error").html(n),$("#popupUpdateFail").popup("open"))}}))}function call(n,t){logmsg("API async call "+n),$.post("/api.html","call="+n,function(n,e){logmsg("API async result: "+n),t&&t(n)},"text").fail(function(){startOver()})}function retrieveConfig(n){return logmsg("Retrieving configuration from device..."),call("~/get/ffs/cfg/root",n)}function saveConfig(){logmsg("Saving configuration in device..."),call("~/set/ffs/cfg/saveFile")}function sendConfig(n){logmsg("Sending configuration to device..."),call("~/set/ffs/cfg/root "+n,saveConfig)}function setText(n,e){$("#"+n).filter(":input").val(e)}function setRadio(n,e){var t=$('input:radio[name="'+n+'"]'),o=t.filter('[value="'+e+'"]');o.prop("checked",!0),t.checkboxradio("refresh"),o.trigger("change")}function setConfig(n){logmsg("Setting inputs from configuration...");var e=JSON.parse(n),t=$("#config");t.find("input:text").val(function(){return e[this.name]}),t.find("input:password").val(function(){return e[this.name]}),setRadio("wifi",e.wifi),setRadio("lan",e.lan),setRadio("ntp",e.ntp),setRadio("update",e.update),setRadio("mqtt",e.mqtt)}function getRadio(n){return $('input:radio[name="'+n+'"]:checked').val()}function getText(n,e){return $("#"+n).filter(":input").val()}function getConfig(){logmsg("Getting configuration from inputs...");var n={},e=$("#config");return e.find("input:text").each(function(){n[$(this).attr("id")]=$(this).val()}),e.find("input:password").each(function(){n[$(this).attr("id")]=$(this).val()}),n.wifi=getRadio("wifi"),n.lan=getRadio("lan"),n.ntp=getRadio("ntp"),n.update=getRadio("update"),n.mqtt=getRadio("mqtt"),JSON.stringify(n)}function apply(){sendConfig(getConfig())}function startOver(){closeConnection(),window.location.href="/"}function message(n){debugmsg(window.status=n)}function message_clear(){message("")}$(document).ready(function(){}),$(document).on("pagecreate","#page1",function(n,e){consStart(),startListener(),logmsg("Initializing dashboard...");retrieveDashboard(dashboardBuild)}),$(document).on("pagecreate","#page2",function(n,e){logmsg("Initializing configuration page..."),setRadioHandlers();retrieveConfig(setConfig)});var lastIndex=0;function startListener(){logmsg("Opening connection..."),setTimeout(openConnection,1e3)}function openConnection(){message_clear();var n="ws://"+window.location.href.split("/")[2]+"/ws";connection&&connection.close(),logmsg("Connecting to "+n+"..."),(connection=new WebSocket(n)).onclose=connection.onerror=connection.onmessage=updateListener}function closeConnection(){connection&&("function"==typeof connection.close?connection.close():"function"==typeof connection.abort&&connection.abort(),connection=void 0)}function updateListener(n){var e="Connection lost, trying to reconnect every 5 seconds.",t="";if(("function"==typeof WebSocket||"object"==typeof WebSocket)&&n&&n.target instanceof WebSocket){if("close"==n.type)return message(e),closeConnection(),void setTimeout(openConnection,5e3);t=n.data,lastIndex=0}else{if(4==connection.readyState)return message(e),void setTimeout(openConnection,5e3);if(3!=connection.readyState)return;var o=connection.responseText.length;if(lastIndex==o)return;t=connection.responseText.substring(lastIndex,o),lastIndex=o}null!=t&&0!=t.length&&(message("data received"),dispatchContent(t))}function dispatchContent(n){var e=JSON.parse(n);if("event"==e.type){consoleWriteln(0,e.value);var t=new Date,o=e.value.split(" "),i=o[0].split("/");i.shift(),i.unshift("~"),o.shift();var a=0<o.length?o.join(" "):"";consEvalEvent(t.toLocaleString(),i,a),dashboardEvalEvent(i,a)}else"log"==e.type&&consoleWriteln(1,e.subtype+" "+e.value)}